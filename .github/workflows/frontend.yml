name: Build and Deploy frontend

on:
  push:
    paths:
      - "frontend/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build React App
        run: |
          cd frontend
          npm install
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build
#- name: Install and Build
#  run: |
#    npm install
#    export NODE_OPTIONS=--openssl-legacy-provider
#    npm run build
##
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Step 6: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-frontend:latest ./frontend
          ocker tag my-frontend:latest docker.io/${{ secrets.DOCKER_USERNAME }}/my-frontend:latest

#       Push the Docker image
      - name: Push Docker image
        run: docker push docker.io/${{ secrets.DOCKER_USERNAME }}/my-frontend:latest
#      - name: Upload to S3
#        run: |
#          aws s3 sync build/ s3://$FRONTEND_BUCKET --delete
#
#      - name: Invalidate CloudFront Cache
#        run: |
#          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"